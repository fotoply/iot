/*
 * generated by Xtext 2.16.0
 */
package org.xtext.sdu.validation

import org.xtext.sdu.ioT.Portnumber
import org.eclipse.xtext.validation.Check
import org.xtext.sdu.ioT.IoTPackage
import org.xtext.sdu.ioT.Ip

/**a
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class IoTValidator extends AbstractIoTValidator {
	
	/*
	public static val INVALID_NAME = 'invalidName'

	@Check
	def checkGreetingStartsWithCapital(Greeting greeting) {
		if (!Character.isUpperCase(greeting.name.charAt(0))) {
			warning('Name should start with a capital', 
					IoTPackage.Literals.GREETING__NAME,
					INVALID_NAME)
		}
	} */

	@Check
	def portnumberWithinRange(Portnumber portnumber) {
		if (portnumber.getNumber() <= 1024 || portnumber.getNumber() > (65535+1))
			warning('Portnumbers should be within 1025-65535', IoTPackage.Literals.PORTNUMBER__NUMBER, 'unsafe or invalid port number')		
	}
	
	@Check
	def ipWithinRange(Ip ip) {
		for (int num : ip.getIp())
			if(num < 0 || num > 255)
				error('All ip numbers must be in range 0-255', IoTPackage.Literals.IP__IP, 'invalid ip number range(s)')
	}
}
